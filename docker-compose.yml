version: "3.9"

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: screener
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d screener -U app"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg://app:app@db:5432/screener
      FINNHUB_API_KEY: ${FINNHUB_API_KEY:-}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-}
      TELEGRAM_CHAT_ID: ${TELEGRAM_CHAT_ID:-}
      PRICE_MIN: ${PRICE_MIN:-5}
      PRICE_MAX: ${PRICE_MAX:-20}
      MIN_RVOL: ${MIN_RVOL:-5}
      VOLUME_CAP: ${VOLUME_CAP:-20000000}
      STARTING_CAPITAL: ${STARTING_CAPITAL:-0}
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8000}
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8000}
    depends_on:
      - backend
    ports:
      - "5173:5173"

volumes:
  db-data:
